/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package offline_matching_algo;

import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**
 *
 * @author Dell
 */
public class Execution_Online extends javax.swing.JFrame {
public static int windowSize0,windowSize1;
boolean consumer[];
	int display[],time;
//public static int [] accumulatedDelay = new int[1000];
    /**
     * Creates new form Execution_Online
     */
    public Execution_Online() {
        initComponents();
        this.setTitle("Online Matching Algorithm");
        ImageIcon iicon;
     iicon = new ImageIcon("algo.png");
setIconImage(iicon.getImage());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel3.setFont(new java.awt.Font("Old English Text MT", 1, 48)); // NOI18N
        jLabel3.setText("Online Stable Matching");

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/offline_matching_algo/output.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/offline_matching_algo/exit1.jpg"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(246, 246, 246)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(40, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 144, Short.MAX_VALUE)
                .addComponent(jButton2))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        if(Online.consumer>1)
		{
			windowSize0=Online3.arrivalTime[1]-Online3.arrivalTime[0];
			windowSize1=windowSize0;
		}
		else
		{
                    setVisible(false);
                    JOptionPane.showMessageDialog(null, "Error...Since only one consumer is involved,you can go to the Offline Stable Matching Algorithm and get the output");
			
		}
		
                
                
        
        consumer=new boolean[Online.donor];
        display=new int[Online.donor];
        time=0;
        for(int i=0;i<Online.donor;i++)
        {
            if(consumer[i])
	        
		
                consumer[i]=false;
                display[i]=-1;
                
                
        }
        int t=1;
       for(int i=0;i<Preference_List_Online.stages;i++)
		{
			
				for(int k=0;k<Online.donor;k++)
				{
					if(consumer[k])
					{
						int m_time=time-Online3.arrivalTime[display[k]-1];
						if(m_time>Online4.maxDelay[display[k]-1])
						{
							consumer[k]=false;
							display[k]=-1;
						}
					}
				}
                                for(int j=0;j<Preference_List_Online.a[i];j++)
                                {
				if(Online3.arrivalTime[Preference_List1_Online.resourceList[i][j]-1]<=time && Online3donorarrival.arrivalTimedonor[Preference_List1_Online.requestList[i][j]-1]<=time && (Online4.maxDelay[Preference_List1_Online.resourceList[i][j]-1]+Online3.arrivalTime[Preference_List1_Online.resourceList[i][j]-1]>=time))
				{
					if(!consumer[Preference_List1_Online.requestList[i][j]-1])
					{
						display[Preference_List1_Online.requestList[i][j]-1]=Preference_List1_Online.resourceList[i][j];
						consumer[Preference_List1_Online.requestList[i][j]-1]=true;
					}
					else
					{
						int d1,d2;
						d1=time-(Online4.maxDelay[display[Preference_List1_Online.requestList[i][j]-1]-1]+Online3.arrivalTime[display[Preference_List1_Online.requestList[i][j]-1]-1]);
						d2=time-(Online4.maxDelay[Preference_List1_Online.resourceList[i][j]-1]+Online3.arrivalTime[Preference_List1_Online.resourceList[i][j]-1]);

						int c1,c2;
						c1=Online2.credit[display[Preference_List1_Online.requestList[i][j]-1]-1];
						c2=Online2.credit[Preference_List1_Online.resourceList[i][j]-1];


						int tc1,tc2;
						tc1=d1*c1;
						tc2=d2*c2;
						if(tc1<tc2)
						{
							display[Preference_List1_Online.requestList[i][j]-1]=Preference_List1_Online.resourceList[i][j];
						}
					}
				}
			}
			time++;
            JLabel l1=new JLabel("Allocation after stage "+ (i+1));
            l1.setBounds(100+(t+1), 50+(t+1)*30, 300, 25);
            t++;
            revalidate();
            repaint();
            add(l1);
            JLabel l2;
            for(int p=0;p<Online.donor;p++)
            {
                if(display[p]==-1)
                {
                    //System.out.println((p+1)+" -> Empty");
                    l2=new JLabel((p+1)+" -> Empty");

                }
                else
                {
                    //System.out.println((p+1)+" -> "+ (display[p]) );
                    l2=new JLabel((p+1)+" -> "+ (display[p]) );
                }

                l2.setBounds(100+(t+1), 50+(t+1)*30, 300, 25);
                t++;
                revalidate();
                repaint();
                add(l2);
                //sp.setBounds(100, 100, 800,400 );
                //sp.add(l2);
                //add(sp);
                //jScrollPane2.setViewportView(l2);

            }

        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Execution_Online.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Execution_Online.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Execution_Online.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Execution_Online.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Execution_Online().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables
}
